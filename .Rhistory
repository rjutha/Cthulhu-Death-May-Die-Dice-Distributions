filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = ""),
labels = list(format = "{percent_change}%")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of arrivals',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = ""),
labels = list(format = "{point.percent_change}%")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of arrivals',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of arrivals',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'percent_change',
'aesc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "",),
labels = list(format = "{value}%")
) %>%
hc_yAxis(
title = list(text = "Percent Change")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = ""),
labels = list(format = "{value}%")
) %>%
hc_yAxis(
title = list(text = "Percent Change")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
labels = list(format = "{value * 100}%")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value),
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
labels = list(format = "{value}%")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value) * 100,
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
labels = list(format = "{value}%")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'value',
'desc')
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value) * 100,
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01)) %>%
slice_head(n=10)
round(0.677888,2)
round(234567.677888,2)
round(234567.677888,2)
round(234567.677888,3)
round(234567.677888,1)
round(234567.677888,0)
round(234567.677888,2)
pi
round(pi,2)
round(12345.12345,2)
round(234567.677888,2)
round(2367.677888,2)
round(3332367.677888,2)
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value) * 100,
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01, scale = 1)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
labels = list(format = "{value}%")
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of departures',
'value',
'desc')
pc_bar_graph <- function(df, ind, order_var, direction){
df %>%
filter(indicator == ind) %>%
group_by(country) %>%
mutate(percent_change = (value - lag(value)) / lag(value) * 100,
prev_year_value = lag(value)) %>%
ungroup() %>%
filter(year == 2020) %>%
filter(!is.na(percent_change)) %>%
arrange_dir(order_var, direction) %>%
mutate(label_value = number(value, big.mark = ","),
label_pyv = number(prev_year_value, big.mark = ","),
label_pc = percent(percent_change, accuracy = 0.01, scale = 1)) %>%
slice_head(n=10) %>%
mutate(country = as_factor(country)) %>%
hchart(
'bar',
hcaes(x = country,
y = percent_change),
color = "#CC4248FF",
tooltip = list(
useHTML = TRUE,
pointFormat =
"Percent Change: {point.label_pc}<br>2019 Tourists: {point.label_pyv}<br> 2020 Tourists: {point.label_value}"
)
) %>%
hc_xAxis(
title = list(text = "")
) %>%
hc_yAxis(
title = list(text = "Percent Change"),
labels = list(format = "{value}%"),
min = -100
) %>%
hc_title(
text = 'Percent Change - 2019 to 2020'
)
}
pc_bar_graph(df,
'International tourism, number of arrivals',
'value',
'desc')
pc_bar_graph(df,
'International tourism, number of arrivals',
'percent_change',
'aesc')
pc_bar_graph(df,
'International tourism, number of arrivals',
'percent_change',
'desc')
shiny::runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
library(shiny)
library(tidyverse)
library(plotly)
## Only run this example in interactive R sessions
if (interactive()) {
shinyApp(
ui = fluidPage(
sidebarLayout(
sidebarPanel(
p("The first slider controls the second"),
sliderInput("control", "Controller:", min=0, max=20, value=10,
step=1),
sliderInput("receive", "Receiver:", min=0, max=20, value=10,
step=1)
),
mainPanel()
)
),
server = function(input, output, session) {
observe({
val <- input$control
# Control the value, min, max, and step.
# Step size is 2 when input value is even; 1 when value is odd.
updateSliderInput(session, "receive", value = val,
min = floor(val/2), max = val+4, step = (val+1)%%2 + 1)
})
}
)
}
runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
shiny::runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
runApp('R Projects/Cthulhu-Death-May-Die-Dice-Distributions')
